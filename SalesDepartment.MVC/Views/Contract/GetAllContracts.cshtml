@{
    Layout = "_Layout";
}

@model SalesDepartment.Application.UseCases.Contracts.Response.ContractResponse[]

<h3 class="text-center">Все Контракты</h3>
<div class="row">
    <div class="col">
            <div class="input-group mb-1 mt-3" style="display:flex; justify-content:space-between; gap:20px;">
            <div style="display: flex; gap: 20px;">
                <a href="@Url.Action("CreateContract")" class="btn btn-primary mr-2">
                    <i class="fa-solid fa-plus"></i> Договор
                </a>
                <a asp-controller="Founder" asp-action="GetAllFounders" class="nav-link">
                    <div class="icon-wrapper">
                        <i class="fa-solid fa-user-group"></i> Основатели
                    </div>
                </a>
            </div>
           
            
            <div style="display:flex; gap:5px">
                <button id="refreshButton" class="btn btn-warning"><i class="fa-solid fa-arrows-rotate"></i></button>
                <input id="searchInput" type="text" class="form-control" placeholder="Поиск" style="max-width: 200px;">
                <div class="input-group-append">
                    <button id="searchButtonSimple" class="btn btn-info" type="button">
                        <i class="fa-solid fa-magnifying-glass"></i>
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col">
        <div class="input-group mb-1 mt-3" style="display:flex; justify-content:space-between; gap:170px">

            <div>
                <a asp-controller="Contract" asp-action="GetAllContractsExcel" class="btn btn-success">
                    <i class="fa-solid fa-file-excel"></i> <i class="fa-solid fa-download"></i>Получить в Excel
                </a>
            </div>
            <div style="display:flex; gap:5px">
                <select id="sortColumn" class="form-control">
                    <option value="ContractNumber">Контракт №</option>
                    <option value="ContractStartDate">Дата контракта</option>
                    <option value="TotalAmountOfContract">Сумма контракта</option>
                    <option value="HomeId">Квартира</option>
                    <option value="CustomerId">Клиент</option>
                    <option value="FounderId">Основатель</option>
                </select>
                <select id="sortOrder" class="form-control">
                    <option value="asc">Восходящий</option>
                    <option value="desc">Нисходящий</option>
                </select>
                <button id="sortButton" class="btn btn-info"><i class="fa-solid fa-arrow-up-a-z"></i> </button>
                <button id="toggleExtendedSearch" class="btn btn-info"> <i class="fa-solid fa-filter"></i> </button>
            </div>

        </div>
    </div>
</div>
<div id="extendedSearchContainer" style="display: none;">
    <div class="row">
        <div class="col">
            <div class="input-group mb-1 mt-3" style="display:flex; justify-content:space-between; gap:5px;">
                <input id="searchContractNumber" type="text" class="form-control" placeholder="Контракт №">
                <input id="searchStartDate" type="date" class="form-control" placeholder="Дата контракта">
                <input id="searchTotalAmountOfContract" type="text" class="form-control" placeholder="Сумма контракта">
                <input id="searchHomeId" type="text" class="form-control" placeholder="Квартира">
                <input id="searchCustomerId" type="text" class="form-control" placeholder="Клиент">
                <input id="searchFounderId" type="text" class="form-control" placeholder="Основатель">
                <div class="input-group-append">
                    <button id="searchButton" class="btn btn-info" type="button">
                        <i class="fa-solid fa-magnifying-glass"></i>
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>
<hr />

<div class="container" style="height: 95vh;">
    <div class="row" style="display:flex; justify-content:center;">
        <div class="col-lg-6" style="width:100%">
            <div class="custom-cards">
                @{
                    if (Model.Length == 0)
                    {
                        <h2>Контрактов пока нет...</h2>
                    }
                }

                <div class="table-container" style="overflow-y: scroll; height: 58vh; width:100% ">
                    <table id="ContractsTable" class="table">
                        <thead>
                            <tr>
                                <th style="width: 25%;">Действия</th>
                                <th style="width: 25%;">Контракт №</th>
                                <th style="width: 25%;">Дата контракта</th>
                                <th style="width: 25%;">Сумма контракта</th>
                                <th style="width: 25%;">Квартира</th>
                                <th style="width: 25%;">Клиент</th>
                                <th style="width: 25%;">Основатель</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var Contract in Model)
                            {
                                <tr>
                                    <td class="action-links">
                                        <div style="display:flex; gap:5px">

                                            <a href="@Url.Action("ViewContract", "Contract", new { id = Contract.Id })" class="btn btn-secondary"><i class="fas fa-info-circle"></i> Подробно</a>
                                        </div>
                                    </td>
                                    <td>@Contract.ContractNumber</td>
                                    <td>@Contract.ContractStartDate.ToString("yyyy-MM-dd")</td>
                                    <td class="amount-cell">@Contract.TotalAmountOfContract</td>
                                    <td>@Contract.Home.Block/ @Contract.Home.Entrance / @Contract.Home.Floor / @Contract.Home.ApartmentNumber</td>
                                    <td>@Contract.Customer.LastName @Contract.Customer.FirstName</td>
                                    <td>@Contract.Founder.LastName @Contract.Founder.FirstName</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    document.getElementById('searchButtonSimple').addEventListener('click', function () {
        var input = document.getElementById('searchInput').value.toLowerCase();
        var rows = document.getElementById('ContractsTable').getElementsByTagName('tbody')[0].getElementsByTagName('tr');

        for (var i = 0; i < rows.length; i++) {
            var cells = rows[i].getElementsByTagName('td');
            var match = false;

            for (var j = 0; j < cells.length; j++) {
                var cellText = cells[j].innerText.toLowerCase();
                if (cellText.includes(input)) {
                    match = true;
                    break;
                }
            }

            rows[i].style.display = match ? '' : 'none';
        }
    });

    document.getElementById('sortButton').addEventListener('click', function () {
        var column = document.getElementById('sortColumn').value;
        var sortOrder = document.getElementById('sortOrder').value;
        var rows = Array.from(document.getElementById('ContractsTable').getElementsByTagName('tbody')[0].getElementsByTagName('tr'));

        rows.sort(function (a, b) {
            var cellA = a.cells[columnIndex(column)].textContent.toLowerCase();
            var cellB = b.cells[columnIndex(column)].textContent.toLowerCase();

            if (sortOrder === 'asc') {
                return cellA.localeCompare(cellB);
            } else {
                return cellB.localeCompare(cellA);
            }
        });

        var tbody = document.getElementById('ContractsTable').getElementsByTagName('tbody')[0];
        for (var i = 0; i < rows.length; i++) {
            tbody.appendChild(rows[i]);
        }
    });

    function columnIndex(columnName) {
        var headers = document.getElementById('ContractsTable').getElementsByTagName('thead')[0].getElementsByTagName('th');
        for (var i = 0; i < headers.length; i++) {
            if (headers[i].textContent.trim() === columnName) {
                return i;
            }
        }
        return -1;
    }
</script>

<script>
    document.getElementById('searchButton').addEventListener('click', function () {
        var searchContractNumber = document.getElementById('searchContractNumber').value.toLowerCase();
        var searchStartDate = document.getElementById('searchStartDate').value;
        var searchEndDate = document.getElementById('searchEndDate').value;
        var searchTotalAmountOfContract = document.getElementById('searchTotalAmountOfContract').value.toLowerCase();
        var searchHomeId = document.getElementById('searchHomeId').value.toLowerCase();
        var searchCustomerId = document.getElementById('searchCustomerId').value.toLowerCase();
        var searchFounderId = document.getElementById('searchFounderId').value.toLowerCase();

        var rows = document.getElementById('ContractsTable').getElementsByTagName('tbody')[0].getElementsByTagName('tr');

        for (var i = 0; i < rows.length; i++) {
            var cells = rows[i].getElementsByTagName('td');
            var contractStartDate = new Date(cells[2].innerText);

            var match = true; // Assume it's a match initially

            if (searchContractNumber && !cells[1].innerText.toLowerCase().includes(searchContractNumber)) {
                match = false;
            }
            if (searchStartDate || searchEndDate) {
                var startDate = new Date(searchStartDate);
                var endDate = new Date(searchEndDate);
                if (!isNaN(startDate) && !isNaN(endDate)) {
                    if (contractStartDate < startDate || contractStartDate > endDate) {
                        match = false;
                    }
                } else if (!isNaN(startDate) && isNaN(endDate)) {
                    if (!isSameDay(contractStartDate, startDate)) {
                        match = false;
                    }
                }
            }
            if (searchTotalAmountOfContract && !cells[3].innerText.toLowerCase().includes(searchTotalAmountOfContract)) {
                match = false;
            }
            if (searchHomeId && !cells[5].innerText.toLowerCase().includes(searchHomeId)) {
                match = false;
            }
            if (searchCustomerId && !cells[6].innerText.toLowerCase().includes(searchCustomerId)) {
                match = false;
            }
            if (searchFounderId && !cells[7].innerText.toLowerCase().includes(searchFounderId)) {
                match = false;
            }

            rows[i].style.display = match ? '' : 'none';
        }
    });

    function isSameDay(date1, date2) {
        return date1.getDate() === date2.getDate() &&
            date1.getMonth() === date2.getMonth() &&
            date1.getFullYear() === date2.getFullYear();
    }
</script>

<script>
    document.getElementById('refreshButton').addEventListener('click', function () {
        // Clear the search input field
        document.getElementById('searchInput').value = '';

        // Reset the sorting to default values
        document.getElementById('sortColumn').value = 'Block';
        document.getElementById('sortOrder').value = 'asc';

        // Reset the extended search fields
        document.getElementById('searchContractNumber').value = '';
        document.getElementById('searchContractStartDate').value = '';
        document.getElementById('searchTotalAmountOfContract').value = '';
        document.getElementById('searchContractEndDate').value = '';
        document.getElementById('searchHomeId').value = '';
        document.getElementById('searchCustomerId').value = '';
        document.getElementById('searchFounderId').value = '';

        // Show all rows in the table
        var rows = document.getElementById('ContractsTable').getElementsByTagName('tbody')[0].getElementsByTagName('tr');
        for (var i = 0; i < rows.length; i++) {
            rows[i].style.display = '';
        }
    });
</script>

<script>
    document.getElementById('toggleExtendedSearch').addEventListener('click', function () {
        var extendedSearchContainer = document.getElementById('extendedSearchContainer');
        if (extendedSearchContainer.style.display === 'none' || extendedSearchContainer.style.display === '') {
            extendedSearchContainer.style.display = 'block';
        } else {
            extendedSearchContainer.style.display = 'none';
        }
    });
</script>

<script>
    // Function to format the amount cells
    function formatAmountCells() {
        var amountCells = document.querySelectorAll('.amount-cell');
        amountCells.forEach(function (cell) {
            var amount = parseFloat(cell.textContent);
            if (!isNaN(amount)) {
                cell.textContent = amount.toLocaleString(undefined, { minimumFractionDigits: 2 });
            }
        });
    }

    // Call the function when the document is ready
    document.addEventListener('DOMContentLoaded', function () {
        formatAmountCells();
    });
</script>